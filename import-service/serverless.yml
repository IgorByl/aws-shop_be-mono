service:
    name: import-service

custom:
    webpack:
        webpackConfig: ./webpack.config.js
        includeModules: true
    region: eu-west-1
    bucketName: training-shop-products-cvs
    table: database-products

plugins:
    - serverless-webpack
    - serverless-iam-roles-per-function
    - serverless-dotenv-plugin

provider:
    name: aws
    runtime: nodejs12.x
    region: ${self:custom.region}
    apiGateway:
        minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
    environment:
        AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
        PG_HOST: ${self:custom.table}.cwa2ipu4ms9x.${self:custom.region}.rds.amazonaws.com
        REGION: ${self:custom.region}
        BUCKET_NAME: ${self:custom.bucketName}
        SQS_URL:
            Ref: CatalogItemsQueue
        SNS_ARN:
            Ref: CreateProductTopic

functions:
    importProductsFile:
        handler: src/import-products.importProductsFile
        iamRoleStatements:
            - Effect: 'Allow'
              Action:
                  - s3:GetObject
                  - s3:ListBucket
              Resource: "arn:aws:s3:::${self:custom.bucketName}"
        events:
            - http:
                  method: get
                  path: import
                  cors: true
                  request:
                    parameters:
                        querystrings:
                            name: true
                  autorizer:
                    name: basicAuthorizer
                    arn: "arn:aws:lambda:eu-west-1:285945094917:function:authorization-service-dev-basicAuthorizer"
                    resultTtlInSeconds: 0
                    identitySource: method.request.header.Authorization
                    type: token

    importFileParser:
        handler: src/parse-products.importFileParser
        iamRoleStatements:
            - Effect: 'Allow'
              Action:
                  - s3:*
              Resource: "arn:aws:s3:::${self:custom.bucketName}"
            - Effect: 'Allow'
              Action:
                  - sqs:SendMessage
              Resource:
                  - Fn::GetAtt:
                      - CatalogItemsQueue
                      - Arn
        events:
            - s3:
                bucket: ${self:custom.bucketName}
                event: s3:ObjectCreated:*
                rules:
                    - prefix: uploaded/
                    - suffix: .csv
                existing: true

    catalogBatchProcess:
        handler: src/catalogBatchProcess.catalogBatchProcess
        iamRoleStatements:
            - Effect: 'Allow'
              Action:
                  - rds:*
              Resource: 'arn:aws:rds:${self:provider.region}:285945094917:db:${self:custom.table}'
            - Effect: 'Allow'
              Action:
                  - sqs:*
              Resource:
                  - Fn::GetAtt:
                      - CatalogItemsQueue
                      - Arn
            - Effect: 'Allow'
              Action:
                  - sns:*
              Resource:
                    Ref: CreateProductTopic
        events:
            - sqs:
                batchSize: 5
                arn:
                    Fn::GetAtt:
                        - CatalogItemsQueue
                        - Arn

resources:
  Resources:
    CatalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: CatalogItemsQueue
    CreateProductTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: CreateProductTopic
    SNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: ihar.bulaty@gmail.com
        Protocol: email
        TopicArn:
          Ref: CreateProductTopic
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    GatewayResponseDefault5XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_5XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
